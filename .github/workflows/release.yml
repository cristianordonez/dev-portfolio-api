name: Release
on:
    push:
        branches: [main]
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    check-version:
        runs-on: ubuntu-latest
        outputs:
            release-version: v${{ steps.get_version.outputs.RELEASE_VERSION }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get version from package.json
              id: get_version
              run: |
                  RELEASE_VERSION=$(npm v ./ version)
                  echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    tag:
        runs-on: ubuntu-latest
        permissions: write-all
        needs:
            - check-version
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ needs.check-version.outputs.release-version }}
                  release_name: ${{ needs.check-version.outputs.release-version }}
                  prerelease: false
                  draft: false

    build-push-image:
        runs-on: ubuntu-latest
        needs:
            - check-version
            - tag
        permissions: write-all
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: docker build
              run: docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.check-version.outputs.release-version }} .

            - name: docker push
              run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.check-version.outputs.release-version }}

    deploy:
        runs-on: ubuntu-latest
        needs:
            - build-push-image
            - check-version
        permissions: write-all
        steps:
            - name: ssh to server
              env:
                  DOCKER_IMAGE: ${{ env.REGISTRY }}/${{ github.repository }}:${{ needs.check-version.outputs.release-version }}
                  PORT: ${{ secrets.DIGITALOCEAN_PORT }}
                  IMAGE_NAME: ${{ github.repository }}
              uses: appleboy/ssh-action@v1.1.0
              with:
                  host: ${{ secrets.DIGITALOCEAN_HOST }}
                  username: ${{ secrets.DIGITALOCEAN_USERNAME }}
                  key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
                  envs: DOCKER_IMAGE,PORT,IMAGE_NAME
                  script: |
                      cd ~/bin/
                      ./pull-run-container.sh $DOCKER_IMAGE $PORT $IMAGE_NAME
