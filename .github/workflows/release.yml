name: Release
on:
    push:
        branches: [main, develop]
permissions: write-all
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    check-version:
        runs-on: ubuntu-latest
        outputs:
            release-version: ${{ steps.get_version.outputs.RELEASE_VERSION }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Get version from package.json
              id: get_version
              run: |
                    RELEASE_VERSION=$(npm v ./ version)
                    echo "RELEASE_VERSION=$RELEASE_VERSION" >> "$GITHUB_OUTPUT"

    tag:
        runs-on: ubuntu-latest
        needs: 
            - check-version
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Create Release
              id: create_release
              uses: actions/create-release@latest
              env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                    tag_name: v${{ needs.check-version.outputs.release-version }}
                    release_name: v${{ needs.check-version.outputs.release-version }}
                    prerelease: false
                    draft: false
    
    build_push_deploy_image:
        runs-on: ubuntu-latest
        needs: 
            - check-version
            - tag
        permissions:
            contents: read
            packages: write
            id-token: write
        steps:

            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
                ref: tags/v${{ needs.check-version.outputs.release-version }}

            - name: Install cosign
              uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
              with:
                cosign-release: 'v2.2.4'

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
              with:
                registry: ${{ env.REGISTRY }}
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract Docker metadata
              id: meta
              uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
              with:
                images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

            - name: Build and push Docker image
              id: build-and-push
              uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
              with:
                context: .
                push: ${{ github.event_name != 'pull_request' }}
                tags: ${{ needs.check-version.outputs.release-version }}
                labels: ${{ steps.meta.outputs.labels }}
                cache-from: type=gha
                cache-to: type=gha,mode=max

            - name: Sign the published Docker image
              env:
                TAGS: ${{ steps.meta.outputs.tags }}
                DIGEST: ${{ steps.build-and-push.outputs.digest }}
              run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
